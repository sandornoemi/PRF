{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book/book.component.ts","./src/app/book/book.component.html","./src/app/shared/book.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","<app-book></app-book>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BookComponent } from './book/book.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { BookService } from '../shared/book.service';\nimport { Book } from '../shared/book.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css'],\n  providers: [BookService]\n})\nexport class BookComponent implements OnInit {\n\n  constructor(public bookService: BookService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n    this.refreshBookList();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n    }\n    this.bookService.selectedBook = {\n      _id: \"\",\n      title: \"\",\n      author: \"\",\n      publisher: \"\",\n      isbn: \"\",\n      numberOfPages: null\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.bookService.postBook(form.value).subscribe((response) => {\n        //this.resetForm(form);\n        //this.refreshBookList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    }\n    else {\n      this.bookService.putBook(form.value).subscribe((response) => {\n        //this.resetForm(form);\n        //this.refreshBookList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n    this.resetForm(form);\n    this.refreshBookList();\n  }\n\n  refreshBookList() {\n    this.bookService.getBookList().subscribe((response) => {\n      this.bookService.books = response as Book[];\n    });\n  }\n\n  onEdit(book: Book) {\n    this.bookService.selectedBook = book;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if(confirm('Are you sure to delete this book?') == true) {\n      this.bookService.deleteBook(_id).subscribe((response) => {\n        this.refreshBookList();\n        this.resetForm(form);\n        M.toast({ html: 'Successfully deleted!', classes: 'rounded'});\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n      <div class=\"card\">\n        <div class=\"card-content white-text\">\n          <div class=\"row\">\n            <div class=\"col s5\">\n              <form #bookForm=\"ngForm\" (ngSubmit)=\"onSubmit(bookForm)\">\n                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"bookService.selectedBook._id\">\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"title\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.title\" placeholder=\"Enter full title\" required>\n                    <label>Book Title :\n                      <label class=\"red-text\">*</label>\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"author\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.author\" placeholder=\"Enter author\">\n                    <label>Author :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"publisher\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.publisher\" placeholder=\"Enter publisher\">\n                    <label>Publisher :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"isbn\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.isbn\" placeholder=\"ISBN\" required>\n                    <label>ISBN :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input type=\"text\" name=\"numberOfPages\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.numberOfPages\" placeholder=\"Number of pages\">\n                      <label>Number of pages :</label>\n                    </div>\n                  </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(bookForm)\">Reset</button>\n                    <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!bookForm.valid\">Submit</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"col s7\">\n                <table class=\"responsive-table highlight\">\n                    <thead>\n                      <tr>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Publisher</th>\n                        <th>ISBN</th>\n                        <th>Number of pages</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tr *ngFor=\"let book of bookService.books\">\n                      <td>{{book.title}}</td>\n                      <td>{{book.author}}</td>\n                      <td>{{book.publisher}}</td>\n                      <td>{{book.isbn}}</td>\n                      <td>{{book.numberOfPages}}</td>\n                      <td>\n                          <a class=\"action-btn\" (click)=\"onEdit(book)\">\n                            <i class=\"material-icons\">edit</i>\n                          </a>\n                          <a class=\"action-btn\" (click)=\"onDelete(book._id,bookForm)\">\n                            <i class=\"material-icons\">delete</i>\n                          </a>\n                        </td>\n                    </tr>\n                  </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Book } from './book.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  selectedBook: Book;\n  books: Book[];\n  //readonly baseUrl = 'http://localhost:3000/books';\n\n  constructor(private http: HttpClient) { }\n\n  postBook(book: Book) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.post(this.baseUrl, book);\n    return this.http.post('http://localhost:3000/books', book);\n  }\n\n  getBookList() {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.get(this.baseUrl);\n    return this.http.get('http://localhost:3000/books');\n  }\n\n  putBook(book: Book) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.put(this.baseUrl + `/${book._id}`, book);\n    return this.http.put('http://localhost:3000/books' + `/${book._id}`, book);\n  }\n\n  deleteBook(_id: string) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.delete(this.baseUrl + `/${_id}`);\n    return this.http.delete('http://localhost:3000/books' + `/${_id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}