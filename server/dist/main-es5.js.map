{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book/book.component.ts","webpack:///src/app/book/book.component.html","webpack:///src/app/shared/book.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookComponent","bookService","resetForm","refreshBookList","form","reset","selectedBook","_id","author","publisher","isbn","numberOfPages","value","postBook","subscribe","response","M","toast","html","classes","putBook","getBookList","books","book","confirm","deleteBook","onSubmit","BookService","http","httpOptions","withCredentials","headers","post","get","put","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","<app-book></app-book>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BookComponent } from './book/book.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { BookService } from '../shared/book.service';\nimport { Book } from '../shared/book.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css'],\n  providers: [BookService]\n})\nexport class BookComponent implements OnInit {\n\n  constructor(public bookService: BookService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n    this.refreshBookList();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n    }\n    this.bookService.selectedBook = {\n      _id: \"\",\n      title: \"\",\n      author: \"\",\n      publisher: \"\",\n      isbn: \"\",\n      numberOfPages: null\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.bookService.postBook(form.value).subscribe((response) => {\n        //this.resetForm(form);\n        //this.refreshBookList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    }\n    else {\n      this.bookService.putBook(form.value).subscribe((response) => {\n        //this.resetForm(form);\n        //this.refreshBookList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n    this.resetForm(form);\n    this.refreshBookList();\n  }\n\n  refreshBookList() {\n    this.bookService.getBookList().subscribe((response) => {\n      this.bookService.books = response as Book[];\n    });\n  }\n\n  onEdit(book: Book) {\n    this.bookService.selectedBook = book;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if(confirm('Are you sure to delete this book?') == true) {\n      this.bookService.deleteBook(_id).subscribe((response) => {\n        this.refreshBookList();\n        this.resetForm(form);\n        M.toast({ html: 'Successfully deleted!', classes: 'rounded'});\n      });\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n      <div class=\"card\">\n        <div class=\"card-content white-text\">\n          <div class=\"row\">\n            <div class=\"col s5\">\n              <form #bookForm=\"ngForm\" (ngSubmit)=\"onSubmit(bookForm)\">\n                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"bookService.selectedBook._id\">\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"title\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.title\" placeholder=\"Enter full title\" required>\n                    <label>Book Title :\n                      <label class=\"red-text\">*</label>\n                    </label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"author\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.author\" placeholder=\"Enter author\">\n                    <label>Author :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"publisher\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.publisher\" placeholder=\"Enter publisher\">\n                    <label>Publisher :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <input type=\"text\" name=\"isbn\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.isbn\" placeholder=\"ISBN\" required>\n                    <label>ISBN :</label>\n                  </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input type=\"text\" name=\"numberOfPages\" #name=\"ngModel\" [(ngModel)]=\"bookService.selectedBook.numberOfPages\" placeholder=\"Number of pages\">\n                      <label>Number of pages :</label>\n                    </div>\n                  </div>\n                <div class=\"row\">\n                  <div class=\"input-field col s12\">\n                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(bookForm)\">Reset</button>\n                    <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!bookForm.valid\">Submit</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"col s7\">\n                <table class=\"responsive-table highlight\">\n                    <thead>\n                      <tr>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Publisher</th>\n                        <th>ISBN</th>\n                        <th>Number of pages</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tr *ngFor=\"let book of bookService.books\">\n                      <td>{{book.title}}</td>\n                      <td>{{book.author}}</td>\n                      <td>{{book.publisher}}</td>\n                      <td>{{book.isbn}}</td>\n                      <td>{{book.numberOfPages}}</td>\n                      <td>\n                          <a class=\"action-btn\" (click)=\"onEdit(book)\">\n                            <i class=\"material-icons\">edit</i>\n                          </a>\n                          <a class=\"action-btn\" (click)=\"onDelete(book._id,bookForm)\">\n                            <i class=\"material-icons\">delete</i>\n                          </a>\n                        </td>\n                    </tr>\n                  </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Book } from './book.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  selectedBook: Book;\n  books: Book[];\n  //readonly baseUrl = 'http://localhost:3000/books';\n\n  constructor(private http: HttpClient) { }\n\n  postBook(book: Book) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.post(this.baseUrl, book);\n    return this.http.post('http://localhost:3000/books', book);\n  }\n\n  getBookList() {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.get(this.baseUrl);\n    return this.http.get('http://localhost:3000/books');\n  }\n\n  putBook(book: Book) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.put(this.baseUrl + `/${book._id}`, book);\n    return this.http.put('http://localhost:3000/books' + `/${book._id}`, book);\n  }\n\n  deleteBook(_id: string) {\n    const httpOptions = {\n      withCredentials: true,\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    //return this.http.delete(this.baseUrl + `/${_id}`);\n    return this.http.delete('http://localhost:3000/books' + `/${_id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}